
digraph {
    graph [pad="0.5", nodesep="0.5", ranksep="2"];
    node [shape=plain]
    rankdir=LR;
    zlentry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zlentry</i></td></tr>
    <tr><td>unsigned_char</td><td port="__p">*p</td></tr>
    <tr><td>unsigned_char</td><td port="encoding">encoding</td></tr>
    <tr><td>unsigned_int</td><td port="headersize">headersize</td></tr>
    <tr><td>unsigned_int</td><td port="lensize">lensize</td></tr>
    <tr><td>unsigned_int</td><td port="len">len</td></tr>
    <tr><td>unsigned_int</td><td port="prevrawlensize">prevrawlensize</td></tr>
    <tr><td>unsigned_int</td><td port="prevrawlen">prevrawlen</td></tr>
    </table>>];
    zsetopval [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zsetopval</i></td></tr>
    <tr><td>double</td><td port="score">score</td></tr>
    <tr><td>long_long</td><td port="ell">ell</td></tr>
    <tr><td>unsigned_int</td><td port="elen">elen</td></tr>
    <tr><td>unsigned_char</td><td port="__estr">*estr</td></tr>
    <tr><td>robj</td><td port="__ele">*ele</td></tr>
    <tr><td>unsigned_char</td><td port="_buf_32_">_buf_32_</td></tr>
    <tr><td>int</td><td port="flags">flags</td></tr>
    </table>>];
    zsetopsrc [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zsetopsrc</i></td></tr>
    <tr><td>union</td><td port="iter">iter</td></tr>
    <tr><td>double</td><td port="weight">weight</td></tr>
    <tr><td>int</td><td port="encoding">encoding</td></tr>
    <tr><td>int</td><td port="type">type</td></tr>
    <tr><td>robj</td><td port="__subject">*subject</td></tr>
    </table>>];
    iter [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>iter</i></td></tr>
    <tr><td>union</td><td port="zset">zset</td></tr>
    <tr><td>union</td><td port="set">set</td></tr>
    </table>>];
    set [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>set</i></td></tr>
    <tr><td>union</td><td port="ht">ht</td></tr>
    <tr><td>union</td><td port="is">is</td></tr>
    </table>>];
    is [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>is</i></td></tr>
    <tr><td>int</td><td port="ii">ii</td></tr>
    <tr><td>intset</td><td port="__is">*is</td></tr>
    </table>>];
    ht [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>ht</i></td></tr>
    <tr><td>dictEntry</td><td port="__de">*de</td></tr>
    <tr><td>dictIterator</td><td port="__di">*di</td></tr>
    <tr><td>dict</td><td port="__dict">*dict</td></tr>
    </table>>];
    zset [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zset</i></td></tr>
    <tr><td>union</td><td port="sl">sl</td></tr>
    <tr><td>union</td><td port="zl">zl</td></tr>
    </table>>];
    zl [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zl</i></td></tr>
    <tr><td>unsigned_char</td><td port="__eptr">*eptr</td></tr>
    <tr><td>unsigned_char</td><td port="__sptr">*sptr</td></tr>
    <tr><td>unsigned_char</td><td port="__zl">*zl</td></tr>
    </table>>];
    sl [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>sl</i></td></tr>
    <tr><td>zskiplistNode</td><td port="__node">*node</td></tr>
    <tr><td>zset</td><td port="__zs">*zs</td></tr>
    </table>>];
    redisAeEvents [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisAeEvents</i></td></tr>
    <tr><td>int</td><td port="reading">reading</td></tr>
    <tr><td>int</td><td port="writing">writing</td></tr>
    <tr><td>int</td><td port="fd">fd</td></tr>
    <tr><td>aeEventLoop</td><td port="__loop">*loop</td></tr>
    <tr><td>redisAsyncContext</td><td port="__context">*context</td></tr>
    </table>>];
    sentinelScriptJob [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>sentinelScriptJob</i></td></tr>
    <tr><td>pid_t</td><td port="pid">pid</td></tr>
    <tr><td>mstime_t</td><td port="start_time">start_time</td></tr>
    <tr><td>char</td><td port="____argv">**argv</td></tr>
    <tr><td>int</td><td port="retry_num">retry_num</td></tr>
    <tr><td>int</td><td port="flags">flags</td></tr>
    </table>>];
    sentinelRedisInstance [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>sentinelRedisInstance</i></td></tr>
    <tr><td>char</td><td port="__client_reconfig_script">*client_reconfig_script</td></tr>
    <tr><td>char</td><td port="__notification_script">*notification_script</td></tr>
    <tr><td>sentinelRedisInstance</td><td port="__promoted_slave">*promoted_slave</td></tr>
    <tr><td>mstime_t</td><td port="failover_delay_logged">failover_delay_logged</td></tr>
    <tr><td>mstime_t</td><td port="failover_timeout">failover_timeout</td></tr>
    <tr><td>mstime_t</td><td port="failover_start_time">failover_start_time</td></tr>
    <tr><td>mstime_t</td><td port="failover_state_change_time">failover_state_change_time</td></tr>
    <tr><td>int</td><td port="failover_state">failover_state</td></tr>
    <tr><td>uint64_t</td><td port="failover_epoch">failover_epoch</td></tr>
    <tr><td>uint64_t</td><td port="leader_epoch">leader_epoch</td></tr>
    <tr><td>char</td><td port="__leader">*leader</td></tr>
    <tr><td>unsigned_long_long</td><td port="slave_repl_offset">slave_repl_offset</td></tr>
    <tr><td>int</td><td port="slave_master_link_status">slave_master_link_status</td></tr>
    <tr><td>int</td><td port="slave_master_port">slave_master_port</td></tr>
    <tr><td>char</td><td port="__slave_master_host">*slave_master_host</td></tr>
    <tr><td>sentinelRedisInstance</td><td port="__master">*master</td></tr>
    <tr><td>mstime_t</td><td port="slave_reconf_sent_time">slave_reconf_sent_time</td></tr>
    <tr><td>int</td><td port="slave_priority">slave_priority</td></tr>
    <tr><td>mstime_t</td><td port="master_link_down_time">master_link_down_time</td></tr>
    <tr><td>char</td><td port="__auth_pass">*auth_pass</td></tr>
    <tr><td>int</td><td port="parallel_syncs">parallel_syncs</td></tr>
    <tr><td>unsigned_int</td><td port="quorum">quorum</td></tr>
    <tr><td>dict</td><td port="__slaves">*slaves</td></tr>
    <tr><td>dict</td><td port="__sentinels">*sentinels</td></tr>
    <tr><td>mstime_t</td><td port="slave_conf_change_time">slave_conf_change_time</td></tr>
    <tr><td>mstime_t</td><td port="role_reported_time">role_reported_time</td></tr>
    <tr><td>int</td><td port="role_reported">role_reported</td></tr>
    <tr><td>mstime_t</td><td port="info_refresh">info_refresh</td></tr>
    <tr><td>mstime_t</td><td port="down_after_period">down_after_period</td></tr>
    <tr><td>mstime_t</td><td port="o_down_since_time">o_down_since_time</td></tr>
    <tr><td>mstime_t</td><td port="s_down_since_time">s_down_since_time</td></tr>
    <tr><td>mstime_t</td><td port="last_master_down_reply_time">last_master_down_reply_time</td></tr>
    <tr><td>mstime_t</td><td port="last_hello_time">last_hello_time</td></tr>
    <tr><td>mstime_t</td><td port="last_pub_time">last_pub_time</td></tr>
    <tr><td>mstime_t</td><td port="last_pong_time">last_pong_time</td></tr>
    <tr><td>mstime_t</td><td port="last_ping_time">last_ping_time</td></tr>
    <tr><td>mstime_t</td><td port="last_avail_time">last_avail_time</td></tr>
    <tr><td>mstime_t</td><td port="pc_last_activity">pc_last_activity</td></tr>
    <tr><td>mstime_t</td><td port="pc_conn_time">pc_conn_time</td></tr>
    <tr><td>mstime_t</td><td port="cc_conn_time">cc_conn_time</td></tr>
    <tr><td>int</td><td port="pending_commands">pending_commands</td></tr>
    <tr><td>redisAsyncContext</td><td port="__pc">*pc</td></tr>
    <tr><td>redisAsyncContext</td><td port="__cc">*cc</td></tr>
    <tr><td>sentinelAddr</td><td port="__addr">*addr</td></tr>
    <tr><td>uint64_t</td><td port="config_epoch">config_epoch</td></tr>
    <tr><td>char</td><td port="__runid">*runid</td></tr>
    <tr><td>char</td><td port="__name">*name</td></tr>
    <tr><td>int</td><td port="flags">flags</td></tr>
    </table>>];
    sentinelAddr [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>sentinelAddr</i></td></tr>
    <tr><td>int</td><td port="port">port</td></tr>
    <tr><td>char</td><td port="__ip">*ip</td></tr>
    </table>>];
    helpEntry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>helpEntry</i></td></tr>
    <tr><td>commandHelp</td><td port="__org">*org</td></tr>
    <tr><td>sds</td><td port="full">full</td></tr>
    <tr><td>sds</td><td port="__argv">*argv</td></tr>
    <tr><td>int</td><td port="argc">argc</td></tr>
    <tr><td>int</td><td port="type">type</td></tr>
    </table>>];
    entry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>entry</i></td></tr>
    <tr><td>char</td><td port="success">success</td></tr>
    <tr><td>int</td><td port="type">type</td></tr>
    <tr><td>char*</td><td port="key">key</td></tr>
    </table>>];
    errors_t [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>errors_t</i></td></tr>
    <tr><td>size_t</td><td port="level">level</td></tr>
    <tr><td>size_t</td><td port="offset_16_">offset_16_</td></tr>
    <tr><td>char</td><td port="error_16__1024_">error_16__1024_</td></tr>
    </table>>];
    pos [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>pos</i></td></tr>
    <tr><td>size_t</td><td port="offset">offset</td></tr>
    <tr><td>size_t</td><td port="size">size</td></tr>
    <tr><td>void</td><td port="__data">*data</td></tr>
    </table>>];
    _client [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>*client</i></td></tr>
    <tr><td>int</td><td port="prefixlen">prefixlen</td></tr>
    <tr><td>int</td><td port="prefix_pending">prefix_pending</td></tr>
    <tr><td>int</td><td port="pending">pending</td></tr>
    <tr><td>long_long</td><td port="latency">latency</td></tr>
    <tr><td>long_long</td><td port="start">start</td></tr>
    <tr><td>unsigned_int</td><td port="written">written</td></tr>
    <tr><td>size_t</td><td port="randfree">randfree</td></tr>
    <tr><td>size_t</td><td port="randlen">randlen</td></tr>
    <tr><td>char</td><td port="____randptr">**randptr</td></tr>
    <tr><td>sds</td><td port="obuf">obuf</td></tr>
    <tr><td>redisContext</td><td port="__context">*context</td></tr>
    </table>>];
    watchedKey [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>watchedKey</i></td></tr>
    <tr><td>redisDb</td><td port="__db">*db</td></tr>
    <tr><td>robj</td><td port="__key">*key</td></tr>
    </table>>];
    migrateCachedSocket [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>migrateCachedSocket</i></td></tr>
    <tr><td>time_t</td><td port="last_use_time">last_use_time</td></tr>
    <tr><td>long</td><td port="last_dbid">last_dbid</td></tr>
    <tr><td>int</td><td port="fd">fd</td></tr>
    </table>>];
    aofrwblock [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aofrwblock</i></td></tr>
    <tr><td>char</td><td port="buf_AOF_RW_BUF_BLOCK_SIZE_">buf_AOF_RW_BUF_BLOCK_SIZE_</td></tr>
    <tr><td>unsigned_long</td><td port="used">used</td></tr>
    <tr><td>unsigned_long</td><td port="free">free</td></tr>
    </table>>];
    aeApiState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeApiState</i></td></tr>
    <tr><td>fd_set</td><td port="_rfds">_rfds</td></tr>
    <tr><td>fd_set</td><td port="_wfds">_wfds</td></tr>
    <tr><td>fd_set</td><td port="rfds">rfds</td></tr>
    <tr><td>fd_set</td><td port="wfds">wfds</td></tr>
    </table>>];
    aeApiState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeApiState</i></td></tr>
    <tr><td>kevent</td><td port="__events">*events</td></tr>
    <tr><td>int</td><td port="kqfd">kqfd</td></tr>
    </table>>];
    aeApiState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeApiState</i></td></tr>
    <tr><td>int____</td><td port="pending_masks_MAX_EVENT_BATCHSZ_">pending_masks_MAX_EVENT_BATCHSZ_</td></tr>
    <tr><td>int____</td><td port="pending_fds_MAX_EVENT_BATCHSZ_">pending_fds_MAX_EVENT_BATCHSZ_</td></tr>
    <tr><td>int____</td><td port="npending">npending</td></tr>
    <tr><td>int____</td><td port="portfd">portfd</td></tr>
    </table>>];
    aeApiState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeApiState</i></td></tr>
    <tr><td>epoll_event</td><td port="__events">*events</td></tr>
    <tr><td>int</td><td port="epfd">epfd</td></tr>
    </table>>];
    slowlogEntry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>slowlogEntry</i></td></tr>
    <tr><td>time_t</td><td port="time">time</td></tr>
    <tr><td>long_long</td><td port="duration">duration</td></tr>
    <tr><td>long_long</td><td port="id">id</td></tr>
    <tr><td>int</td><td port="argc">argc</td></tr>
    <tr><td>robj</td><td port="____argv">**argv</td></tr>
    </table>>];
    SHA1_CTX [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>SHA1_CTX</i></td></tr>
    <tr><td>unsigned_char</td><td port="buffer_64_">buffer_64_</td></tr>
    <tr><td>u_int32_t</td><td port="count_2_">count_2_</td></tr>
    <tr><td>u_int32_t</td><td port="state_5_">state_5_</td></tr>
    </table>>];
    zlexrangespec [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zlexrangespec</i></td></tr>
    <tr><td>int</td><td port="minex">minex</td></tr>
    <tr><td>int</td><td port="maxex">maxex</td></tr>
    <tr><td>robj</td><td port="__min">*min</td></tr>
    <tr><td>robj</td><td port="__max">*max</td></tr>
    </table>>];
    zrangespec [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zrangespec</i></td></tr>
    <tr><td>int</td><td port="minex">minex</td></tr>
    <tr><td>int</td><td port="maxex">maxex</td></tr>
    <tr><td>double</td><td port="min">min</td></tr>
    <tr><td>double</td><td port="max">max</td></tr>
    </table>>];
    hashTypeIterator [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>hashTypeIterator</i></td></tr>
    <tr><td>dictEntry</td><td port="__de">*de</td></tr>
    <tr><td>dictIterator</td><td port="__di">*di</td></tr>
    <tr><td>unsigned_char</td><td port="__fptr">*fptr</td></tr>
    <tr><td>unsigned_char</td><td port="__vptr">*vptr</td></tr>
    <tr><td>int</td><td port="encoding">encoding</td></tr>
    <tr><td>robj</td><td port="__subject">*subject</td></tr>
    </table>>];
    setTypeIterator [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>setTypeIterator</i></td></tr>
    <tr><td>dictIterator</td><td port="__di">*di</td></tr>
    <tr><td>int</td><td port="ii">ii</td></tr>
    <tr><td>int</td><td port="encoding">encoding</td></tr>
    <tr><td>robj</td><td port="__subject">*subject</td></tr>
    </table>>];
    listTypeEntry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>listTypeEntry</i></td></tr>
    <tr><td>listNode</td><td port="__ln">*ln</td></tr>
    <tr><td>unsigned_char</td><td port="__zi">*zi</td></tr>
    <tr><td>listTypeIterator</td><td port="__li">*li</td></tr>
    </table>>];
    listTypeIterator [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>listTypeIterator</i></td></tr>
    <tr><td>listNode</td><td port="__ln">*ln</td></tr>
    <tr><td>unsigned_char</td><td port="__zi">*zi</td></tr>
    <tr><td>unsigned_char</td><td port="direction">direction</td></tr>
    <tr><td>unsigned_char</td><td port="encoding">encoding</td></tr>
    <tr><td>robj</td><td port="__subject">*subject</td></tr>
    </table>>];
    redisSortOperation [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisSortOperation</i></td></tr>
    <tr><td>robj</td><td port="__pattern">*pattern</td></tr>
    <tr><td>int</td><td port="type">type</td></tr>
    </table>>];
    redisSortObject [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisSortObject</i></td></tr>
    <tr><td>union</td><td port="u">u</td></tr>
    <tr><td>robj</td><td port="__obj">*obj</td></tr>
    </table>>];
    u [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>u</i></td></tr>
    <tr><td>robj</td><td port="__cmpobj">*cmpobj</td></tr>
    <tr><td>double</td><td port="score">score</td></tr>
    </table>>];
    pubsubPattern [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>pubsubPattern</i></td></tr>
    <tr><td>robj</td><td port="__pattern">*pattern</td></tr>
    <tr><td>redisClient</td><td port="__client">*client</td></tr>
    </table>>];
    redisOpArray [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisOpArray</i></td></tr>
    <tr><td>int</td><td port="numops">numops</td></tr>
    <tr><td>redisOp</td><td port="__ops">*ops</td></tr>
    </table>>];
    redisOp [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisOp</i></td></tr>
    <tr><td>redisCommand</td><td port="__cmd">*cmd</td></tr>
    <tr><td>int</td><td port="argc">argc</td></tr>
    <tr><td>int</td><td port="target">target</td></tr>
    <tr><td>int</td><td port="dbid">dbid</td></tr>
    <tr><td>robj</td><td port="____argv">**argv</td></tr>
    </table>>];
    clientBufferLimitsConfig [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clientBufferLimitsConfig</i></td></tr>
    <tr><td>time_t</td><td port="soft_limit_seconds">soft_limit_seconds</td></tr>
    <tr><td>unsigned_long_long</td><td port="soft_limit_bytes">soft_limit_bytes</td></tr>
    <tr><td>unsigned_long_long</td><td port="hard_limit_bytes">hard_limit_bytes</td></tr>
    </table>>];
    zset [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zset</i></td></tr>
    <tr><td>zskiplist</td><td port="__zsl">*zsl</td></tr>
    <tr><td>dict</td><td port="__dict">*dict</td></tr>
    </table>>];
    zskiplist [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zskiplist</i></td></tr>
    <tr><td>int</td><td port="level">level</td></tr>
    <tr><td>unsigned_long</td><td port="length">length</td></tr>
    <tr><td>zskiplistNode</td><td port="__header">*header</td></tr>
    <tr><td>zskiplistNode</td><td port="__tail">*tail</td></tr>
    </table>>];
    zskiplistNode [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>zskiplistNode</i></td></tr>
    <tr><td>struct</td><td port="level">level</td></tr>
    <tr><td>zskiplistNode</td><td port="__backward">*backward</td></tr>
    <tr><td>double</td><td port="score">score</td></tr>
    <tr><td>robj</td><td port="__obj">*obj</td></tr>
    </table>>];
    level [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>level</i></td></tr>
    <tr><td>unsigned_int</td><td port="span">span</td></tr>
    <tr><td>zskiplistNode</td><td port="__forward">*forward</td></tr>
    </table>>];
    redisClient [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisClient</i></td></tr>
    <tr><td>char</td><td port="buf_REDIS_REPLY_CHUNK_BYTES_">buf_REDIS_REPLY_CHUNK_BYTES_</td></tr>
    <tr><td>int</td><td port="bufpos">bufpos</td></tr>
    <tr><td>sds</td><td port="peerid">peerid</td></tr>
    <tr><td>list</td><td port="__pubsub_patterns">*pubsub_patterns</td></tr>
    <tr><td>dict</td><td port="__pubsub_channels">*pubsub_channels</td></tr>
    <tr><td>list</td><td port="__watched_keys">*watched_keys</td></tr>
    <tr><td>long_long</td><td port="woff">woff</td></tr>
    <tr><td>blockingState</td><td port="bpop">bpop</td></tr>
    <tr><td>int</td><td port="btype">btype</td></tr>
    <tr><td>multiState</td><td port="mstate">mstate</td></tr>
    <tr><td>int</td><td port="slave_listening_port">slave_listening_port</td></tr>
    <tr><td>char</td><td port="replrunid_REDIS_RUN_ID_SIZE+1_">replrunid_REDIS_RUN_ID_SIZE+1_</td></tr>
    <tr><td>long_long</td><td port="repl_ack_time">repl_ack_time</td></tr>
    <tr><td>long_long</td><td port="repl_ack_off">repl_ack_off</td></tr>
    <tr><td>long_long</td><td port="reploff">reploff</td></tr>
    <tr><td>sds</td><td port="replpreamble">replpreamble</td></tr>
    <tr><td>off_t</td><td port="repldbsize">repldbsize</td></tr>
    <tr><td>off_t</td><td port="repldboff">repldboff</td></tr>
    <tr><td>int</td><td port="repldbfd">repldbfd</td></tr>
    <tr><td>int</td><td port="repl_put_online_on_ack">repl_put_online_on_ack</td></tr>
    <tr><td>int</td><td port="replstate">replstate</td></tr>
    <tr><td>int</td><td port="authenticated">authenticated</td></tr>
    <tr><td>int</td><td port="flags">flags</td></tr>
    <tr><td>time_t</td><td port="obuf_soft_limit_reached_time">obuf_soft_limit_reached_time</td></tr>
    <tr><td>time_t</td><td port="lastinteraction">lastinteraction</td></tr>
    <tr><td>time_t</td><td port="ctime">ctime</td></tr>
    <tr><td>int</td><td port="sentlen">sentlen</td></tr>
    <tr><td>unsigned_long</td><td port="reply_bytes">reply_bytes</td></tr>
    <tr><td>list</td><td port="__reply">*reply</td></tr>
    <tr><td>long</td><td port="bulklen">bulklen</td></tr>
    <tr><td>int</td><td port="multibulklen">multibulklen</td></tr>
    <tr><td>int</td><td port="reqtype">reqtype</td></tr>
    <tr><td>redisCommand</td><td port="__cmd">*cmd</td></tr>
    <tr><td>redisCommand</td><td port="__lastcmd">*lastcmd</td></tr>
    <tr><td>robj</td><td port="____argv">**argv</td></tr>
    <tr><td>int</td><td port="argc">argc</td></tr>
    <tr><td>size_t</td><td port="querybuf_peak">querybuf_peak</td></tr>
    <tr><td>sds</td><td port="querybuf">querybuf</td></tr>
    <tr><td>robj</td><td port="__name">*name</td></tr>
    <tr><td>int</td><td port="dictid">dictid</td></tr>
    <tr><td>redisDb</td><td port="__db">*db</td></tr>
    <tr><td>int</td><td port="fd">fd</td></tr>
    <tr><td>uint64_t</td><td port="id">id</td></tr>
    </table>>];
    readyList [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>readyList</i></td></tr>
    <tr><td>robj</td><td port="__key">*key</td></tr>
    <tr><td>redisDb</td><td port="__db">*db</td></tr>
    </table>>];
    blockingState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>blockingState</i></td></tr>
    <tr><td>long_long</td><td port="reploffset">reploffset</td></tr>
    <tr><td>int</td><td port="numreplicas">numreplicas</td></tr>
    <tr><td>robj</td><td port="__target">*target</td></tr>
    <tr><td>dict</td><td port="__keys">*keys</td></tr>
    <tr><td>mstime_t</td><td port="timeout">timeout</td></tr>
    </table>>];
    multiState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>multiState</i></td></tr>
    <tr><td>time_t</td><td port="minreplicas_timeout">minreplicas_timeout</td></tr>
    <tr><td>int</td><td port="minreplicas">minreplicas</td></tr>
    <tr><td>int</td><td port="count">count</td></tr>
    <tr><td>multiCmd</td><td port="__commands">*commands</td></tr>
    </table>>];
    multiCmd [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>multiCmd</i></td></tr>
    <tr><td>redisCommand</td><td port="__cmd">*cmd</td></tr>
    <tr><td>int</td><td port="argc">argc</td></tr>
    <tr><td>robj</td><td port="____argv">**argv</td></tr>
    </table>>];
    redisDb [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>redisDb</i></td></tr>
    <tr><td>long_long</td><td port="avg_ttl">avg_ttl</td></tr>
    <tr><td>int</td><td port="id">id</td></tr>
    <tr><td>evictionPoolEntry</td><td port="__eviction_pool">*eviction_pool</td></tr>
    <tr><td>dict</td><td port="__watched_keys">*watched_keys</td></tr>
    <tr><td>dict</td><td port="__ready_keys">*ready_keys</td></tr>
    <tr><td>dict</td><td port="__blocking_keys">*blocking_keys</td></tr>
    <tr><td>dict</td><td port="__expires">*expires</td></tr>
    <tr><td>dict</td><td port="__dict">*dict</td></tr>
    </table>>];
    robj [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>robj</i></td></tr>
    <tr><td>void</td><td port="__ptr">*ptr</td></tr>
    <tr><td>int</td><td port="refcount">refcount</td></tr>
    <tr><td>unsigned</td><td port="lru:REDIS_LRU_BITS">lru:REDIS_LRU_BITS</td></tr>
    <tr><td>unsigned</td><td port="encoding:4">encoding:4</td></tr>
    <tr><td>unsigned</td><td port="type:4">type:4</td></tr>
    </table>>];
    intset [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>intset</i></td></tr>
    <tr><td>int8_t</td><td port="contents__">contents__</td></tr>
    <tr><td>uint32_t</td><td port="length">length</td></tr>
    <tr><td>uint32_t</td><td port="encoding">encoding</td></tr>
    </table>>];
    dictIterator [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>dictIterator</i></td></tr>
    <tr><td>long_long</td><td port="fingerprint">fingerprint</td></tr>
    <tr><td>dictEntry</td><td port="__entry">*entry</td></tr>
    <tr><td>dictEntry</td><td port="__nextEntry">*nextEntry</td></tr>
    <tr><td>int</td><td port="table">table</td></tr>
    <tr><td>int</td><td port="safe">safe</td></tr>
    <tr><td>long</td><td port="index">index</td></tr>
    <tr><td>dict</td><td port="__d">*d</td></tr>
    </table>>];
    dict [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>dict</i></td></tr>
    <tr><td>int</td><td port="iterators">iterators</td></tr>
    <tr><td>long</td><td port="rehashidx">rehashidx</td></tr>
    <tr><td>dictht</td><td port="ht_2_">ht_2_</td></tr>
    <tr><td>void</td><td port="__privdata">*privdata</td></tr>
    <tr><td>dictType</td><td port="__type">*type</td></tr>
    </table>>];
    dictht [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>dictht</i></td></tr>
    <tr><td>unsigned_long</td><td port="used">used</td></tr>
    <tr><td>unsigned_long</td><td port="sizemask">sizemask</td></tr>
    <tr><td>unsigned_long</td><td port="size">size</td></tr>
    <tr><td>dictEntry</td><td port="____table">**table</td></tr>
    </table>>];
    dictType [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>dictType</i></td></tr>
    <tr><td colspan="2" port="valDestructor">void (*valDestructor)(void *privdata, void *obj)</td></tr>
    <tr><td colspan="2" port="keyDestructor">void (*keyDestructor)(void *privdata, void *key)</td></tr>
    <tr><td colspan="2" port="keyCompare">int (*keyCompare)(void *privdata, const void *key1, const void *key2)</td></tr>
    <tr><td colspan="2" port="valDup">void *(*valDup)(void *privdata, const void *obj)</td></tr>
    <tr><td colspan="2" port="keyDup">void *(*keyDup)(void *privdata, const void *key)</td></tr>
    <tr><td colspan="2" port="hashFunction">unsigned int (*hashFunction)(const void *key)</td></tr>
    </table>>];
    dictEntry [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>dictEntry</i></td></tr>
    <tr><td>dictEntry</td><td port="__next">*next</td></tr>
    <tr><td>union</td><td port="v">v</td></tr>
    <tr><td>void</td><td port="__key">*key</td></tr>
    </table>>];
    v [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>v</i></td></tr>
    <tr><td>double</td><td port="d">d</td></tr>
    <tr><td>int64_t</td><td port="s64">s64</td></tr>
    <tr><td>uint64_t</td><td port="u64">u64</td></tr>
    <tr><td>void</td><td port="__val">*val</td></tr>
    </table>>];
    clusterMsg [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterMsg</i></td></tr>
    <tr><td>union_clusterMsgData</td><td port="data">data</td></tr>
    <tr><td>unsigned_char</td><td port="mflags_3_">mflags_3_</td></tr>
    <tr><td>unsigned_char</td><td port="state">state</td></tr>
    <tr><td>uint16_t</td><td port="flags">flags</td></tr>
    <tr><td>uint16_t</td><td port="port">port</td></tr>
    <tr><td>char</td><td port="notused1_32_">notused1_32_</td></tr>
    <tr><td>char</td><td port="slaveof_REDIS_CLUSTER_NAMELEN_">slaveof_REDIS_CLUSTER_NAMELEN_</td></tr>
    <tr><td>unsigned_char</td><td port="myslots_REDIS_CLUSTER_SLOTS/8_">myslots_REDIS_CLUSTER_SLOTS/8_</td></tr>
    <tr><td>char</td><td port="sender_REDIS_CLUSTER_NAMELEN_">sender_REDIS_CLUSTER_NAMELEN_</td></tr>
    <tr><td>uint64_t</td><td port="offset">offset</td></tr>
    <tr><td>uint64_t</td><td port="configEpoch">configEpoch</td></tr>
    <tr><td>uint64_t</td><td port="currentEpoch">currentEpoch</td></tr>
    <tr><td>uint16_t</td><td port="count">count</td></tr>
    <tr><td>uint16_t</td><td port="type">type</td></tr>
    <tr><td>uint16_t</td><td port="notused0">notused0</td></tr>
    <tr><td>uint16_t</td><td port="ver">ver</td></tr>
    <tr><td>uint32_t</td><td port="totlen">totlen</td></tr>
    <tr><td>char</td><td port="sig_4_">sig_4_</td></tr>
    </table>>];
    clusterMsgDataUpdate [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterMsgDataUpdate</i></td></tr>
    <tr><td>unsigned_char</td><td port="slots_REDIS_CLUSTER_SLOTS/8_">slots_REDIS_CLUSTER_SLOTS/8_</td></tr>
    <tr><td>char</td><td port="nodename_REDIS_CLUSTER_NAMELEN_">nodename_REDIS_CLUSTER_NAMELEN_</td></tr>
    <tr><td>uint64_t</td><td port="configEpoch">configEpoch</td></tr>
    </table>>];
    clusterMsgDataPublish [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterMsgDataPublish</i></td></tr>
    <tr><td>unsigned_char</td><td port="bulk_data_8_">bulk_data_8_</td></tr>
    <tr><td>uint32_t</td><td port="message_len">message_len</td></tr>
    <tr><td>uint32_t</td><td port="channel_len">channel_len</td></tr>
    </table>>];
    clusterMsgDataFail [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterMsgDataFail</i></td></tr>
    <tr><td>char</td><td port="nodename_REDIS_CLUSTER_NAMELEN_">nodename_REDIS_CLUSTER_NAMELEN_</td></tr>
    </table>>];
    clusterMsgDataGossip [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterMsgDataGossip</i></td></tr>
    <tr><td>uint32_t</td><td port="notused2">notused2</td></tr>
    <tr><td>uint16_t</td><td port="notused1">notused1</td></tr>
    <tr><td>uint16_t</td><td port="flags">flags</td></tr>
    <tr><td>uint16_t</td><td port="port">port</td></tr>
    <tr><td>char</td><td port="ip_REDIS_IP_STR_LEN_">ip_REDIS_IP_STR_LEN_</td></tr>
    <tr><td>uint32_t</td><td port="pong_received">pong_received</td></tr>
    <tr><td>uint32_t</td><td port="ping_sent">ping_sent</td></tr>
    <tr><td>char</td><td port="nodename_REDIS_CLUSTER_NAMELEN_">nodename_REDIS_CLUSTER_NAMELEN_</td></tr>
    </table>>];
    clusterState [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterState</i></td></tr>
    <tr><td>long_long</td><td port="stats_bus_messages_received">stats_bus_messages_received</td></tr>
    <tr><td>long_long</td><td port="stats_bus_messages_sent">stats_bus_messages_sent</td></tr>
    <tr><td>int</td><td port="todo_before_sleep">todo_before_sleep</td></tr>
    <tr><td>uint64_t</td><td port="lastVoteEpoch">lastVoteEpoch</td></tr>
    <tr><td>int</td><td port="mf_can_start">mf_can_start</td></tr>
    <tr><td>long_long</td><td port="mf_master_offset">mf_master_offset</td></tr>
    <tr><td>clusterNode</td><td port="__mf_slave">*mf_slave</td></tr>
    <tr><td>mstime_t</td><td port="mf_end">mf_end</td></tr>
    <tr><td>int</td><td port="cant_failover_reason">cant_failover_reason</td></tr>
    <tr><td>uint64_t</td><td port="failover_auth_epoch">failover_auth_epoch</td></tr>
    <tr><td>int</td><td port="failover_auth_rank">failover_auth_rank</td></tr>
    <tr><td>int</td><td port="failover_auth_sent">failover_auth_sent</td></tr>
    <tr><td>int</td><td port="failover_auth_count">failover_auth_count</td></tr>
    <tr><td>mstime_t</td><td port="failover_auth_time">failover_auth_time</td></tr>
    <tr><td>zskiplist</td><td port="__slots_to_keys">*slots_to_keys</td></tr>
    <tr><td>clusterNode</td><td port="__slots_REDIS_CLUSTER_SLOTS_">*slots_REDIS_CLUSTER_SLOTS_</td></tr>
    <tr><td>clusterNode</td><td port="__importing_slots_from_REDIS_CLUSTER_SLOTS_">*importing_slots_from_REDIS_CLUSTER_SLOTS_</td></tr>
    <tr><td>clusterNode</td><td port="__migrating_slots_to_REDIS_CLUSTER_SLOTS_">*migrating_slots_to_REDIS_CLUSTER_SLOTS_</td></tr>
    <tr><td>dict</td><td port="__nodes_black_list">*nodes_black_list</td></tr>
    <tr><td>dict</td><td port="__nodes">*nodes</td></tr>
    <tr><td>int</td><td port="size">size</td></tr>
    <tr><td>int</td><td port="state">state</td></tr>
    <tr><td>uint64_t</td><td port="currentEpoch">currentEpoch</td></tr>
    <tr><td>clusterNode</td><td port="__myself">*myself</td></tr>
    </table>>];
    clusterNode [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterNode</i></td></tr>
    <tr><td>list</td><td port="__fail_reports">*fail_reports</td></tr>
    <tr><td>clusterLink</td><td port="__link">*link</td></tr>
    <tr><td>int</td><td port="port">port</td></tr>
    <tr><td>char</td><td port="ip_REDIS_IP_STR_LEN_">ip_REDIS_IP_STR_LEN_</td></tr>
    <tr><td>long_long</td><td port="repl_offset">repl_offset</td></tr>
    <tr><td>mstime_t</td><td port="repl_offset_time">repl_offset_time</td></tr>
    <tr><td>mstime_t</td><td port="voted_time">voted_time</td></tr>
    <tr><td>mstime_t</td><td port="fail_time">fail_time</td></tr>
    <tr><td>mstime_t</td><td port="pong_received">pong_received</td></tr>
    <tr><td>mstime_t</td><td port="ping_sent">ping_sent</td></tr>
    <tr><td>clusterNode</td><td port="__slaveof">*slaveof</td></tr>
    <tr><td>clusterNode</td><td port="____slaves">**slaves</td></tr>
    <tr><td>int</td><td port="numslaves">numslaves</td></tr>
    <tr><td>int</td><td port="numslots">numslots</td></tr>
    <tr><td>unsigned_char</td><td port="slots_REDIS_CLUSTER_SLOTS/8_">slots_REDIS_CLUSTER_SLOTS/8_</td></tr>
    <tr><td>uint64_t</td><td port="configEpoch">configEpoch</td></tr>
    <tr><td>int</td><td port="flags">flags</td></tr>
    <tr><td>char</td><td port="name_REDIS_CLUSTER_NAMELEN_">name_REDIS_CLUSTER_NAMELEN_</td></tr>
    <tr><td>mstime_t</td><td port="ctime">ctime</td></tr>
    </table>>];
    clusterNodeFailReport [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterNodeFailReport</i></td></tr>
    <tr><td>mstime_t</td><td port="time">time</td></tr>
    <tr><td>clusterNode</td><td port="__node">*node</td></tr>
    </table>>];
    clusterLink [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>clusterLink</i></td></tr>
    <tr><td>clusterNode</td><td port="__node">*node</td></tr>
    <tr><td>sds</td><td port="rcvbuf">rcvbuf</td></tr>
    <tr><td>sds</td><td port="sndbuf">sndbuf</td></tr>
    <tr><td>int</td><td port="fd">fd</td></tr>
    <tr><td>mstime_t</td><td port="ctime">ctime</td></tr>
    </table>>];
    aeEventLoop [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeEventLoop</i></td></tr>
    <tr><td>aeBeforeSleepProc</td><td port="__beforesleep">*beforesleep</td></tr>
    <tr><td>void</td><td port="__apidata">*apidata</td></tr>
    <tr><td>int</td><td port="stop">stop</td></tr>
    <tr><td>aeTimeEvent</td><td port="__timeEventHead">*timeEventHead</td></tr>
    <tr><td>aeFiredEvent</td><td port="__fired">*fired</td></tr>
    <tr><td>aeFileEvent</td><td port="__events">*events</td></tr>
    <tr><td>time_t</td><td port="lastTime">lastTime</td></tr>
    <tr><td>long_long</td><td port="timeEventNextId">timeEventNextId</td></tr>
    <tr><td>int</td><td port="setsize">setsize</td></tr>
    <tr><td>int</td><td port="maxfd">maxfd</td></tr>
    </table>>];
    aeFiredEvent [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeFiredEvent</i></td></tr>
    <tr><td>int</td><td port="mask">mask</td></tr>
    <tr><td>int</td><td port="fd">fd</td></tr>
    </table>>];
    aeTimeEvent [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeTimeEvent</i></td></tr>
    <tr><td>aeTimeEvent</td><td port="__next">*next</td></tr>
    <tr><td>void</td><td port="__clientData">*clientData</td></tr>
    <tr><td>aeEventFinalizerProc</td><td port="__finalizerProc">*finalizerProc</td></tr>
    <tr><td>aeTimeProc</td><td port="__timeProc">*timeProc</td></tr>
    <tr><td>long</td><td port="when_ms">when_ms</td></tr>
    <tr><td>long</td><td port="when_sec">when_sec</td></tr>
    <tr><td>long_long</td><td port="id">id</td></tr>
    </table>>];
    aeFileEvent [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>aeFileEvent</i></td></tr>
    <tr><td>void</td><td port="__clientData">*clientData</td></tr>
    <tr><td>aeFileProc</td><td port="__wfileProc">*wfileProc</td></tr>
    <tr><td>aeFileProc</td><td port="__rfileProc">*rfileProc</td></tr>
    <tr><td>int</td><td port="mask">mask</td></tr>
    </table>>];
    list [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>list</i></td></tr>
    <tr><td>unsigned_long</td><td port="len">len</td></tr>
    <tr><td colspan="2" port="match">int (*match)(void *ptr, void *key)</td></tr>
    <tr><td colspan="2" port="free">void (*free)(void *ptr)</td></tr>
    <tr><td colspan="2" port="dup">void *(*dup)(void *ptr)</td></tr>
    <tr><td>listNode</td><td port="__tail">*tail</td></tr>
    <tr><td>listNode</td><td port="__head">*head</td></tr>
    </table>>];
    listIter [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>listIter</i></td></tr>
    <tr><td>int</td><td port="direction">direction</td></tr>
    <tr><td>listNode</td><td port="__next">*next</td></tr>
    </table>>];
    listNode [label=<
    <table border="0" cellborder="1" cellspacing="0">
    <tr><td colspan="2" port="head"><i>listNode</i></td></tr>
    <tr><td>void</td><td port="__value">*value</td></tr>
    <tr><td>listNode</td><td port="__next">*next</td></tr>
    <tr><td>listNode</td><td port="__prev">*prev</td></tr>
    </table>>];
    zsetopval:__ele->robj:head
    zsetopsrc:iter->iter:head
    zsetopsrc:__subject->robj:head
    iter:zset->zset:head
    iter:set->set:head
    set:ht->ht:head
    set:is->is:head
    is:__is->intset:head
    ht:__de->dictEntry:head
    ht:__di->dictIterator:head
    ht:__dict->dict:head
    zset:sl->sl:head
    zset:zl->zl:head
    sl:__node->zskiplistNode:head
    sl:__zs->zset:head
    redisAeEvents:__loop->aeEventLoop:head
    sentinelRedisInstance:__promoted_slave->sentinelRedisInstance:head
    sentinelRedisInstance:__master->sentinelRedisInstance:head
    sentinelRedisInstance:__slaves->dict:head
    sentinelRedisInstance:__sentinels->dict:head
    sentinelRedisInstance:__addr->sentinelAddr:head
    watchedKey:__db->redisDb:head
    watchedKey:__key->robj:head
    slowlogEntry:____argv->robj:head
    zlexrangespec:__min->robj:head
    zlexrangespec:__max->robj:head
    hashTypeIterator:__de->dictEntry:head
    hashTypeIterator:__di->dictIterator:head
    hashTypeIterator:__subject->robj:head
    setTypeIterator:__di->dictIterator:head
    setTypeIterator:__subject->robj:head
    listTypeEntry:__ln->listNode:head
    listTypeEntry:__li->listTypeIterator:head
    listTypeIterator:__ln->listNode:head
    listTypeIterator:__subject->robj:head
    redisSortOperation:__pattern->robj:head
    redisSortObject:u->u:head
    redisSortObject:__obj->robj:head
    u:__cmpobj->robj:head
    pubsubPattern:__pattern->robj:head
    pubsubPattern:__client->redisClient:head
    redisOpArray:__ops->redisOp:head
    redisOp:____argv->robj:head
    zset:__zsl->zskiplist:head
    zset:__dict->dict:head
    zskiplist:__header->zskiplistNode:head
    zskiplist:__tail->zskiplistNode:head
    zskiplistNode:level->level:head
    zskiplistNode:__backward->zskiplistNode:head
    zskiplistNode:__obj->robj:head
    level:__forward->zskiplistNode:head
    redisClient:__pubsub_patterns->list:head
    redisClient:__pubsub_channels->dict:head
    redisClient:__watched_keys->list:head
    redisClient:bpop->blockingState:head
    redisClient:mstate->multiState:head
    redisClient:__reply->list:head
    redisClient:____argv->robj:head
    redisClient:__name->robj:head
    redisClient:__db->redisDb:head
    readyList:__key->robj:head
    readyList:__db->redisDb:head
    blockingState:__target->robj:head
    blockingState:__keys->dict:head
    multiState:__commands->multiCmd:head
    multiCmd:____argv->robj:head
    redisDb:__watched_keys->dict:head
    redisDb:__ready_keys->dict:head
    redisDb:__blocking_keys->dict:head
    redisDb:__expires->dict:head
    redisDb:__dict->dict:head
    dictIterator:__entry->dictEntry:head
    dictIterator:__nextEntry->dictEntry:head
    dictIterator:__d->dict:head
    dict:ht_2_->dictht:head
    dict:__type->dictType:head
    dictht:____table->dictEntry:head
    dictEntry:__next->dictEntry:head
    dictEntry:v->v:head
    clusterState:__mf_slave->clusterNode:head
    clusterState:__slots_to_keys->zskiplist:head
    clusterState:__slots_REDIS_CLUSTER_SLOTS_->clusterNode:head
    clusterState:__importing_slots_from_REDIS_CLUSTER_SLOTS_->clusterNode:head
    clusterState:__migrating_slots_to_REDIS_CLUSTER_SLOTS_->clusterNode:head
    clusterState:__nodes_black_list->dict:head
    clusterState:__nodes->dict:head
    clusterState:__myself->clusterNode:head
    clusterNode:__fail_reports->list:head
    clusterNode:__link->clusterLink:head
    clusterNode:__slaveof->clusterNode:head
    clusterNode:____slaves->clusterNode:head
    clusterNodeFailReport:__node->clusterNode:head
    clusterLink:__node->clusterNode:head
    aeEventLoop:__timeEventHead->aeTimeEvent:head
    aeEventLoop:__fired->aeFiredEvent:head
    aeEventLoop:__events->aeFileEvent:head
    aeTimeEvent:__next->aeTimeEvent:head
    list:__tail->listNode:head
    list:__head->listNode:head
    listIter:__next->listNode:head
    listNode:__next->listNode:head
    listNode:__prev->listNode:head
}
